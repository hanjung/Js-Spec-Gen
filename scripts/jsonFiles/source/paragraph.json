{
  "name": "Paragraph",
  "description": "A container for the visible content on a page. A Paragraph can contain any one ParagraphType type of content.",
  "isCollection": false,
  "collectionOf": null,
  "restPath": null,
  "info": {
    "version": "1.1",
    "addedIn": "1.1",
    "addinTypes": [
      "OneNote"
    ],
    "nameSpace": "OneNote",
    "addinHosts": [
      "Task pane"
    ],
    "title": "Office JavaScript Add-in API",
    "description": "Office JavaScript Add-in API"
  },
  "properties": [
    {
      "name": "id",
      "dataType": "string",
      "description": "Gets the ID of the Paragraph object.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": false,
      "isKey": null,
      "notes": null
    },
    {
      "name": "outline",
      "dataType": "Outline",
      "description": "Gets the Outline object that contains the Paragraph.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "isKey": null,
      "notes": null
    },
    {
      "name": "type",
      "dataType": "string",
      "description": "Gets the type of the Paragraph object.",
      "isReadOnly": true,
      "enumNameJs": "OneNote.ParagraphType",
      "isCollection": false,
      "isRelationship": false,
      "isKey": null,
      "notes": null
    },
    {
      "name": "richText",
      "dataType": "RichText",
      "description": "Gets the RichText object in the Paragraph. Returns null if ParagraphType is not RichText. Read-only",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "isKey": null,
      "notes": null
    },
    {
      "name": "image",
      "dataType": "Image",
      "description": "Gets the Image object in the Paragraph. Returns null if ParagraphType is not Image.",
      "isReadOnly": true,
      "enumNameJs": null,
      "isCollection": false,
      "isRelationship": true,
      "isKey": null,
      "notes": null
    }
  ],
  "methods": [
    {
      "name": "delete",
      "returnType": "void",
      "description": "Deletes the paragraph",
      "syntax": "paragraphObject.delete();",
      "signature": "delete()",
      "restfulName": "delete",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": null
    },
    {
      "name": "insertAsSibling",
      "returnType": "void",
      "description": "Inserts the specified HTML content",
      "syntax": "paragraphObject.insertAsSibling(html, insertLocation);",
      "signature": "insertAsSibling(html: string, insertLocation: string)",
      "restfulName": "insertAsSibling",
      "notes": null,
      "httpSuccessResponse": null,
      "parameters": [
        {
          "name": "html",
          "dataType": "string",
          "isCollection": false,
          "description": "An HTML string that describes the visual presentation of the content.",
          "isRequired": true,
          "enumNameJs": null,
          "notes": null
        },
        {
          "name": "insertLocation",
          "dataType": "string",
          "isCollection": false,
          "description": "The location of new contents relative to the current Paragraph.",
          "isRequired": true,
          "enumNameJs": "OneNote.InsertLocation",
          "notes": null
        }
      ]
    },
    {
      "name": "load",
      "returnType": "void",
      "description": "Fills the proxy object created in JavaScript layer with property and object values specified in the parameter.",
      "syntax": "object.load(param);",
      "signature": "load(param: object)",
      "restfulName": null,
      "notes": null,
      "parameters": [
        {
          "name": "param",
          "dataType": "object",
          "description": "Accepts parameter and relationship names as delimited string or an array. Or, provide [loadOption](loadoption.md) object.",
          "isRequired": false,
          "enumNameJs": null,
          "possibleValues": null,
          "notes": null
        }
      ]
    }
  ]
}